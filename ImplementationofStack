#include <iostream>
using namespace std;

#define SIZE 100

struct stack {
    int arr[SIZE];
    int top;
    
    stack() {  // Constructor to initialize top
        top = -1;
    }
};

void push(stack &s, int val) {
    if (s.top == SIZE - 1) {
        cout << "Stack Overflow\n";
        return;
    }
    s.arr[++s.top] = val;
}

void pop(stack &s) {
    if (s.top == -1) {
        cout << "Stack Underflow\n";
        return;
    }
    s.top--;
}

void peek(const stack &s) {
    if (s.top == -1) {
        cout << "Stack is empty\n";
        return;
    }
    cout << "Top element: " << s.arr[s.top] << endl;
}

void traverse(const stack &s) {
    if (s.top == -1) {
        cout << "Stack is empty\n";
        return;
    }
    cout << "Stack elements: ";
    for (int i = s.top; i >= 0; i--) {
        cout << s.arr[i] << " ";
    }
    cout << endl;
}

bool search(const stack &s, int val) {
    for (int i = 0; i <= s.top; i++) {
        if (s.arr[i] == val) 
            return true;
    }
    return false;
}

int main() {
    stack s;
    push(s, 10);
    push(s, 20);
    push(s, 30);
    traverse(s);
    peek(s);
    pop(s);
    traverse(s);
    cout << "Search 10: " << (search(s, 10) ? "found" : "not found") << endl;
    cout << "Search 40: " << (search(s, 40) ? "found" : "not found") << endl;

    return 0;
}
